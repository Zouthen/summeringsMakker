// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using summeringsmakker.Data;

#nullable disable

namespace summeringsMakker.Migrations
{
    [DbContext(typeof(SummeringsMakkerDbContext))]
    [Migration("20240425141654_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("summeringsmakker.Models.CaseSummary", b =>
                {
                    b.Property<int>("CaseSummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CaseSummaryId"));

                    b.Property<string>("MermaidCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CaseSummaryId");

                    b.ToTable("CaseSummaries");
                });

            modelBuilder.Entity("summeringsmakker.Models.CaseSummaryLegalReference", b =>
                {
                    b.Property<int>("CaseSummaryId")
                        .HasColumnType("int");

                    b.Property<int>("LegalReferenceId")
                        .HasColumnType("int");

                    b.HasKey("CaseSummaryId", "LegalReferenceId");

                    b.HasIndex("LegalReferenceId");

                    b.ToTable("CaseSummaryLegalReferences");
                });

            modelBuilder.Entity("summeringsmakker.Models.CaseSummaryWord", b =>
                {
                    b.Property<int>("CaseSummaryId")
                        .HasColumnType("int");

                    b.Property<int>("WordId")
                        .HasColumnType("int");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.HasKey("CaseSummaryId", "WordId");

                    b.HasIndex("WordId");

                    b.ToTable("CaseSummaryWords");
                });

            modelBuilder.Entity("summeringsmakker.Models.LegalReference", b =>
                {
                    b.Property<int>("LegalReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LegalReferenceId"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("LegalReferenceId");

                    b.ToTable("LegalReferences");
                });

            modelBuilder.Entity("summeringsmakker.Models.Word", b =>
                {
                    b.Property<int>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("WordId"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("WordId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("summeringsmakker.Models.CaseSummaryLegalReference", b =>
                {
                    b.HasOne("summeringsmakker.Models.CaseSummary", "CaseSummary")
                        .WithMany("CaseSummaryLegalReferences")
                        .HasForeignKey("CaseSummaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("summeringsmakker.Models.LegalReference", "LegalReference")
                        .WithMany("CaseSummaryLegalReferences")
                        .HasForeignKey("LegalReferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaseSummary");

                    b.Navigation("LegalReference");
                });

            modelBuilder.Entity("summeringsmakker.Models.CaseSummaryWord", b =>
                {
                    b.HasOne("summeringsmakker.Models.CaseSummary", "CaseSummary")
                        .WithMany("CaseSummaryWords")
                        .HasForeignKey("CaseSummaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("summeringsmakker.Models.Word", "Word")
                        .WithMany("CaseSummaryWords")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaseSummary");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("summeringsmakker.Models.CaseSummary", b =>
                {
                    b.Navigation("CaseSummaryLegalReferences");

                    b.Navigation("CaseSummaryWords");
                });

            modelBuilder.Entity("summeringsmakker.Models.LegalReference", b =>
                {
                    b.Navigation("CaseSummaryLegalReferences");
                });

            modelBuilder.Entity("summeringsmakker.Models.Word", b =>
                {
                    b.Navigation("CaseSummaryWords");
                });
#pragma warning restore 612, 618
        }
    }
}
